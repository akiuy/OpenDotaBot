#–∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫ // import libraries
import requests
import json
import os
import telebot
import datetime
from dotenv import load_dotenv


#–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Å .env —Ñ–∞–π–ª–∞ // Getting token from .env file
load_dotenv()
bot=telebot.TeleBot(os.getenv("TOKEN"))

#–ü—Ä–æ—á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –≥–µ—Ä–æ—è–º–∏ // #Reading file with heroes
with open('heroes.json', 'r') as heroes:
  heroid = json.load(heroes)


#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start // processing /start command
@bot.message_handler(commands=['start'])
def get_match_id(message):
  bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç. –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –Ω–∞ –±–∞–∑–µ OpenDota API\n–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏: /help')


#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help // processing /help command
@bot.message_handler(commands=['help'])
def get_match_id(message):
  bot.send_message(message.chat.id, '/findmatch - —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Ç—á–µ –ø–æ –µ–≥–æ ID')


#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /findmatch // processing /findmatch command
@bot.message_handler(commands=['findmatch'])
def get_match_id(message):
  match_id = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ id –º–∞—Ç—á–∞')
  bot.register_next_step_handler(match_id, get_match_data) #–ë–µ—Ä—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è // Taking information from user`s message

def get_match_data(message):
  match_id = int(message.text) #–û–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é // Designating user information into a variable 
  try:
    resp = requests.get(f'https://api.opendota.com/api/matches/{match_id}') # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä opendota.com // Sending a request to the opendota.com server
    response = resp.json() # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –≤–∏–¥–µ json-—Ñ–∞–π–ª–∞ // Collecting info in json-file format

    with open(f'{match_id}.json', 'w') as outfile:
      json.dump(response, outfile) #–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ json-—Ñ–∞–π–ª–∞ // Saving received json-file

    with open(f'{match_id}.json', 'r') as outfile:
      result = json.load(outfile) #–ß—Ç–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ json-—Ñ–∞–π–ª–∞ // Reading received json-file

    #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ // Processing and saving match results into variables
    data_win = result["radiant_win"]
    data_duration = str(datetime.timedelta(seconds=result["duration"]))
    data_radiant_score = result["radiant_score"]
    data_dire_score = result["dire_score"]
    #–°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–≥—Ä–æ–∫–∞—Ö // Creating empty lists to save player information
    data_players_radiant = []
    data_players_dire = []


    #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–≥—Ä–æ–∫–∞—Ö, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–∏ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä–µ–π // Processing information about players, saving to lists in the form of dictionaries
    for elem in result["players"]:
      if elem.get("team_number") == 0: #–ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–∏–ª —Å–≤–µ—Ç–∞ // If the player is on the radiant side
        players_info = dict()
        players_info['hero'] = heroid[str(elem.get('hero_id'))]
        players_info['kills'] = elem.get("kills", None)
        players_info['deaths'] = elem.get("deaths", None)
        players_info['assists'] = elem.get("assists", None)
        data_players_radiant.append(players_info)
      elif elem.get("team_number") == 1: #–ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–∏–ª —Ç—å–º—ã // If the player is on the dire side
        players_info = dict()
        players_info['hero'] = heroid[str(elem.get('hero_id'))]
        players_info['kills'] = elem.get("kills", None)
        players_info['deaths'] = elem.get("deaths", None)
        players_info['assists'] = elem.get("assists", None)
        data_players_dire.append(players_info)
      else:
        pass


    #–û—Ç–ø—Ä–∞–≤–∫–∞ –±–æ—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞—Ç—á–µ // Bot sending a message with information about a match
    if data_win: #–ü–æ–±–µ–¥–∞ —Å–∏–ª —Å–≤–µ—Ç–∞ // Radiant match-win 
      bot.send_message(message.chat.id, f'''üèÜ–°–∏–ª—ã —Å–≤–µ—Ç–∞ [{data_radiant_score}:{data_dire_score}] –°–∏–ª—ã —Ç—å–º—ã 
–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {data_duration}\n
üèÜ–°–∏–ª—ã —Å–≤–µ—Ç–∞:\n
{data_players_radiant[0].get('hero')} - [{data_players_radiant[0].get('kills')}/{data_players_radiant[0].get('deaths')}/{data_players_radiant[0].get('assists')}]
{data_players_radiant[1].get('hero')} - [{data_players_radiant[1].get('kills')}/{data_players_radiant[1].get('deaths')}/{data_players_radiant[1].get('assists')}]
{data_players_radiant[2].get('hero')} - [{data_players_radiant[2].get('kills')}/{data_players_radiant[2].get('deaths')}/{data_players_radiant[2].get('assists')}]
{data_players_radiant[3].get('hero')} - [{data_players_radiant[3].get('kills')}/{data_players_radiant[3].get('deaths')}/{data_players_radiant[3].get('assists')}]
{data_players_radiant[4].get('hero')} - [{data_players_radiant[4].get('kills')}/{data_players_radiant[4].get('deaths')}/{data_players_radiant[4].get('assists')}]

–°–∏–ª—ã —Ç—å–º—ã:\n
{data_players_dire[0].get('hero')} - [{data_players_dire[0].get('kills')}/{data_players_dire[0].get('deaths')}/{data_players_dire[0].get('assists')}]
{data_players_dire[1].get('hero')} - [{data_players_dire[1].get('kills')}/{data_players_dire[1].get('deaths')}/{data_players_dire[1].get('assists')}]
{data_players_dire[2].get('hero')} - [{data_players_dire[2].get('kills')}/{data_players_dire[2].get('deaths')}/{data_players_dire[2].get('assists')}]
{data_players_dire[3].get('hero')} - [{data_players_dire[3].get('kills')}/{data_players_dire[3].get('deaths')}/{data_players_dire[3].get('assists')}]
{data_players_dire[4].get('hero')} - [{data_players_dire[4].get('kills')}/{data_players_dire[4].get('deaths')}/{data_players_dire[4].get('assists')}]
''')
      
    else: ##–ü–æ–±–µ–¥–∞ —Å–∏–ª —Ç—å–º—ã // Dire match-win 
      bot.send_message(message.chat.id, f'''–°–∏–ª—ã —Å–≤–µ—Ç–∞ [{data_radiant_score}:{data_dire_score}] –°–∏–ª—ã —Ç—å–º—ãüèÜ
–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {data_duration}
–°–∏–ª—ã —Å–≤–µ—Ç–∞:\n
{data_players_radiant[0].get('hero')} - [{data_players_radiant[0].get('kills')}/{data_players_radiant[0].get('deaths')}/{data_players_radiant[0].get('assists')}]
{data_players_radiant[1].get('hero')} - [{data_players_radiant[1].get('kills')}/{data_players_radiant[1].get('deaths')}/{data_players_radiant[1].get('assists')}]
{data_players_radiant[2].get('hero')} - [{data_players_radiant[2].get('kills')}/{data_players_radiant[2].get('deaths')}/{data_players_radiant[2].get('assists')}]
{data_players_radiant[3].get('hero')} - [{data_players_radiant[3].get('kills')}/{data_players_radiant[3].get('deaths')}/{data_players_radiant[3].get('assists')}]
{data_players_radiant[4].get('hero')} - [{data_players_radiant[4].get('kills')}/{data_players_radiant[4].get('deaths')}/{data_players_radiant[4].get('assists')}]\n
üèÜ–°–∏–ª—ã —Ç—å–º—ã:\n
{data_players_dire[0].get('hero')} - [{data_players_dire[0].get('kills')}/{data_players_dire[0].get('deaths')}/{data_players_dire[0].get('assists')}]
{data_players_dire[1].get('hero')} - [{data_players_dire[1].get('kills')}/{data_players_dire[1].get('deaths')}/{data_players_dire[1].get('assists')}]
{data_players_dire[2].get('hero')} - [{data_players_dire[2].get('kills')}/{data_players_dire[2].get('deaths')}/{data_players_dire[2].get('assists')}]
{data_players_dire[3].get('hero')} - [{data_players_dire[3].get('kills')}/{data_players_dire[3].get('deaths')}/{data_players_dire[3].get('assists')}]
{data_players_dire[4].get('hero')} - [{data_players_dire[4].get('kills')}/{data_players_dire[4].get('deaths')}/{data_players_dire[4].get('assists')}]
''')
      
    os.remove(f'{match_id}.json') #–£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ json-—Ñ–∞–π–ª–∞ // Deleting a previously received json file
  except:
    pass
  


bot.infinity_polling()

